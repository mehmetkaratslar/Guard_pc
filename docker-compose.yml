version: '3.8'

services:
  # Guard PC Uygulaması
  guard-app:
    build: .
    container_name: GuardPC
    restart: unless-stopped
    
    # Port mapping
    ports:
      - "5000:5000"    # API sunucu ve mobil erişim
    
    # Çevre değişkenleri
    environment:
      - PYTHONPATH=/app
      - DISPLAY=${DISPLAY:-:99}
    
    # Çevre değişkenleri dosyası
    env_file:
      - .env
    
    # Volume mounts
    volumes:
      - ./logs:/app/logs                              # Log dosyaları
      - ./resources:/app/resources                    # Model ve config dosyaları
      - /dev/video0:/dev/video0                      # Kamera erişimi (Linux)
      - /tmp/.X11-unix:/tmp/.X11-unix:rw             # X11 forwarding (GUI için)
    
    # Device erişimi
    devices:
      - /dev/video0:/dev/video0  # Webcam
    
    # Privileged mode (kamera erişimi için)
    privileged: true
    
    # Network
    network_mode: "host"  # Host network kullan (kamera ve X11 için)
    
    # Sağlık kontrolü
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Bağımlılıklar
    depends_on:
      - xvfb
    
    # Restart politikası
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # X11 Virtual Framebuffer (GUI için)
  xvfb:
    image: jare/x11-bridge
    container_name: guard-xvfb
    restart: unless-stopped
    
    ports:
      - "8080:8080"  # Web-based X11 client
    
    environment:
      - DISPLAY=:99
      - XVFB_WHD=1920x1080x24
    
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw

  # Nginx Reverse Proxy (Opsiyonel)
  nginx:
    image: nginx:alpine
    container_name: guard-nginx
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL sertifikaları
    
    depends_on:
      - guard-app
    
    # Sadece production için
    profiles:
      - production

  # Monitoring (Opsiyonel)
  watchtower:
    image: containrrr/watchtower
    container_name: guard-watchtower
    restart: unless-stopped
    
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600  # 1 saat
    
    # Sadece production için
    profiles:
      - production

# Networks
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  app_logs:
    driver: local
  app_data:
    driver: local